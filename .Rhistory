pnorm(q = 320, mean = 362, sd = 59.5936, lower.tail = TRUE)
qnorm(p = .85, mean = 362, sd = 59.5936, lower.tail = TRUE)
pnorm(q = 46, mean = 40, sd = 3, lower.tail = FALSE)
library(mvtnorm)
pmvnorm(mean = c(12, 31), sigma = matrix(c(4, 3, 3, 25), nrow = 2), upper = TRUE)
pmvnorm(mean = c(10, 30), sigma = matrix(c(4, 3, 3, 25), nrow = 2), lower = c(12, 31))
library(tidyverse)
pnorm(100,000, mean = 87850, sd = 4370.37, lower.tail = FALSE)
pnorm(100000, mean = 87850, sd = 4370.37, lower.tail = FALSE)
pnorm(200, mean = 180, sd = 6.7082, lower.tail = TRUE)
pnorm(200, mean = 180, sd = 6.7082, lower.tail = TRUE) - pnorm(150, mean = 180, sd = 6.7082, lower.tail = FALSE)
pnorm(200, mean = 180, sd = 6.7082, lower.tail = TRUE)
pnorm(150, mean = 180, sd = 6.7082, lower.tail = FALSE)
pnorm(200, mean = 180, sd = 6.7082, lower.tail = TRUE) - pnorm(150, mean = 180, sd = 6.7082, lower.tail = TRUE)
pnorm(55, 60, 2.23607, lower.tail = FALSE)
pnorm(62, 60, 2.23607, lower.tail = TRUE) - pnorm(58, 60, 2.23607, lower.tail = FALSE)
pnorm(62, 60, 2.23607, lower.tail = TRUE) - pnorm(58, 60, 2.23607, lower.tail = TRUE)
pnorm(5, 0, 4.74342, lower.tail = TRUE) - pnorm(-10, 0, 4.74342, lower.tail = TRUE)
pnorm(160, 150, 6, lower.tail = TRUE)
pnorm(120, 90, 4.69042, lower.tail = FALSE)
pnorm(0, -30, 8.83176, lower.tail = FALSE)
# load packages here
library(tidyverse)
library(ggfortify)  # plot lm objects using ggplot instead of base R
library(car)  # needed for added-variable plots and dfbetas
library(corrplot)  # colored correlation matrix
# install.packages("devtools")
# devtools::install_github("thomasp85/patchwork")
library(patchwork)
library(lmtest) # for BP Test
library(gridExtra) # for grid.arrange
life <- read_table('LifeExpectancy.txt')
life
life <- life[,-1]
life
summary(life)
typeof(life$Country)
typeof(life$Group)
typeof(life$PPGDP)
typeof(life$LifeExp)
life <- as.data.frame(unclass(life),                     # Convert all columns to factor
stringsAsFactors = TRUE)
typeof(life)
typeof(life$Country)
typeof(life$Group)
typeof(life$LifeExp)
ggplot(data = life) +
geom_point(mapping = aes(x = PPGDP, y = LifeExp)) +
theme(aspect.ratio = 1)
ggplot(data = life) +
geom_point(mapping = aes(x = Group, y = LifeExp)) +
theme(aspect.ratio = 1)
ggplot(data = life) +
geom_bar(mapping = aes(x = Group, y = LifeExp)) +
theme(aspect.ratio = 1)
ggplot(data = life) +
geom_bar(mapping = aes(x = Group)) +
theme(aspect.ratio = 1)
ggplot(data = life) +
geom_boxplot(mapping = aes(x = Group, y = LifeExp)) +
theme(aspect.ratio = 1)
# load packages here
library(tidyverse)
library(ggfortify)  # plot lm objects using ggplot instead of base R
library(car)  # needed for added-variable plots and dfbetas
library(corrplot)  # colored correlation matrix
# install.packages("devtools")
# devtools::install_github("thomasp85/patchwork")
library(patchwork)
library(lmtest) # for BP Test
library(gridExtra) # for grid.arrange
life <- read_table('LifeExpectancy.txt')
life <- life[,-1]
life <- as.data.frame(unclass(life),                     # Convert all columns to factor
stringsAsFactors = TRUE)
ggplot(data = life) +
geom_point(mapping = aes(x = PPGDP, y = LifeExp)) +
theme(aspect.ratio = 1) +
labs(title = 'PPGDP vs Life Expectancy Scatterplot',
x = 'Per Person GDP (Log Scale)',
y = 'Life Expectancy (Years)')
ggplot(data = life) +
geom_boxplot(mapping = aes(x = Group, y = LifeExp)) +
theme(aspect.ratio = 1) +
labs(title = 'Groups vs Life Expectancy Box Plot',
y = 'Life Expectancy (Years)')
ggplot(data = life) +
geom_point(mapping = aes(x = PPGDP,
y = LifeExp,
color = Group)) +
theme(aspect.ratio = 1) +
labs(title = 'PPGDP vs Life Expectancy Scatterplot (color by Group)',
x = 'Per Person GDP (Log Scale)',
y = 'Life Expectancy (Years)')
life$africaYes <- ifelse(life$africa == 'Yes', 1, 0)
life$africaGroup <- ifelse(life$Group == 'africa', 1, 0)
#life$africaNo <- ifelse(life$africa == 'No', 1, 0)
life$oecdGroup <- ifelse(life$Group == 'oecd', 1, 0)
#life$oecdNo <- ifelse(life$oecd == "No", 1, 0)
life_lm_overparm <- lm(Group ~ other +
africaGroup +
oecdGroup,
data = life)
life_lm_overparm <- lm(life ~ Group +
africaGroup +
oecdGroup,
data = life)
life_lm_overparm <- lm(Group ~ other +
africaGroup +
oecdGroup,
data = life)
life_lm_overparm <- lm(life ~ PPGDP +
africaGroup +
oecdGroup,
data = life)
life_lm_overparm <- lm(LifeExp ~ PPGDP +
africaGroup +
oecdGroup,
data = life)
summary(life_lm_overparm)
confint(life_lm_overparm, level = 0.95)
anova(life_lm_overparm, LifeExp ~ Group)
life_lm_overparm2 <- lm(LifeExp ~ PPGDP,
data = life)
anova(life_lm_overparm, life_lm_overparm2)
predict(life_lm_overparm,
newdata = data.frame(PPGDP = 9.5,
oecdGroup = 1,
africaGroup = 0),
interval = "prediction",
level = 0.95)
ggplot(life) +
geom_point(mapping = aes(x = PPGDP,
y = LifeExp,
color = Group)) +
geom_line(mapping = aes(x = PPGDP,
y = predict(life_lm_overparm),
color = Group)) +
theme(aspect.ratio = 1)
ggplot(life) +
geom_point(mapping = aes(x = PPGDP,
y = LifeExp,
color = Group)) +
geom_line(mapping = aes(x = PPGDP,
y = predict(life_lm_overparm),
color = Group)) +
theme(aspect.ratio = 1) +
labs(title = 'PPGDP vs Life Expectancy Scatterplot (color by Group)',
x = 'Per Person GDP (Log Scale)',
y = 'Life Expectancy (Years)')
life_lm_inter <- lm(LifeExp ~ PPGDP +
africaGroup +
oecdGroup +
PPGDP:Group,
data = salary)
life_lm_inter <- lm(LifeExp ~ PPGDP +
africaGroup +
oecdGroup +
PPGDP:Group,
data = life)
summary(life_lm_inter)
life_lm_inter <- lm(LifeExp ~ PPGDP +
africaGroup +
oecdGroup +
PPGDP:africaGroup +
PPGDP:oecdGroup,
data = life)
summary(life_lm_inter)
anova(life_lm_overparm, life_lm_inter)
ggplot(life) +
geom_point(mapping = aes(x = PPGDP,
y = LifeExp,
color = Group)) +
geom_line(mapping = aes(x = PPGDP,
y = predict(life_lm_inter),
color = Group)) +
theme(aspect.ratio = 1) +
labs(title = 'PPGDP vs Life Expectancy Scatterplot (color by Group)',
x = 'Per Person GDP (Log Scale)',
y = 'Life Expectancy (Years)')
pbinom(54, 4, lower.tail = TRUE)
pnorm(q = 54, mean = 53, sd = .5, lower.tail = TRUE)
pnorm(q = 53, mean = 53, sd = .5, lower.tail = TRUE)
pnorm(q = 54, mean = 53, sd = .5, lower.tail = TRUE) - pnorm(q = 53, mean = 53, sd = .5, lower.tail = TRUE)
n_list <- c(1:25)
ideal_prob <- function(n_list) {
for(i in n_list) {
print(n_list[i])
}
}
ideal_prob()
ideal_prob()
ideal_prob <- function(list) {
for(i in n_list) {
print(list[i])
}
}
ideal_prob(n_list)
ideal_prob <- function(list) {
for(i in n_list) {
sd_i <- sqrt(1/n_list[i])
p_i <- pnorm(q = 54, mean = 53, sd = sd_i, lower.tail = TRUE)
print(p_i)
}
}
ideal_prob(n_list)
ideal_prob <- function(list) {
for(i in n_list) {
sd_i <- sqrt(1/n_list[i])
p_i <- pnorm(q = 54, mean = 53, sd = sd_i, lower.tail = TRUE)
print(c(n_list[i],p_i))
}
}
ideal_prob(n_list)
ideal_prob <- function(list) {
for(i in n_list) {
sd_i <- sqrt(1/n_list[i])
p_i <- pnorm(q = 54, mean = 53, sd = sd_i, lower.tail = TRUE)
print(c(lapply(n_list[i]),p_i))
}
}
ideal_prob(n_list)
ideal_prob <- function(list) {
for(i in n_list) {
sd_i <- sqrt(1/n_list[i])
p_i <- pnorm(q = 54, mean = 53, sd = sd_i, lower.tail = TRUE)
print(c(lapply(n_list[i], as.integer),p_i))
}
}
ideal_prob(n_list)
ideal_prob <- function(list) {
for(i in n_list) {
sd_i <- sqrt(1/n_list[i])
p_i <- pnorm(q = 54, mean = 53, sd = sd_i, lower.tail = TRUE)
print(p_i)
}
}
ideal_prob(n_list)
pnorm(q = 500, mean = 390, sd = 14.6969, lower.tail = TRUE)
pbern(x, prob = 0.6)
phat <- vector(0:n)/n
p = .6
n = 3
calc_binomzn <- function(p, n) {
}
calc_binomzn(p,n)
calc_binomzn <- function(p, n) {
phat <- vector(0:n)/n
zn <- (phat - p) / (sqrt((p(1-p))/n))
Fbin <- pbinom(n*p + sqrt(n*p*(1-p))*zn, n, p)
return(list(zn = zn, Fbin = Fbin))
}
n3
n3 <- calc_binomzn(.6, 3)
calc_binomzn <- function(p, n) {
phat <- c(0:n)/n
zn <- (phat - p) / (sqrt((p(1-p))/n))
Fbin <- pbinom(n*p + sqrt(n*p*(1-p))*zn, n, p)
return(list(zn = zn, Fbin = Fbin))
}
n3 <- calc_binomzn(.6, 3)
calc_binomzn <- function(p, n) {
phat <- c(0:n)/n
zn <- (phat - p) / (sqrt((p*(1-p))/n))
Fbin <- pbinom(n*p + sqrt(n*p*(1-p))*zn, n, p)
return(list(zn = zn, Fbin = Fbin))
}
n3 <- calc_binomzn(.6, 3)
n15 <- calc_binomzn(.6, 15)
n30 <- calc_binomzn(.6, 30)
n3
n15
n30
plot(n3$zn, n3$Fbin)
plot(n3$zn, n3$Fbin, type = 's')
plot(n3$zn, n3$Fbin, type = 's')
plot(n3$zn, n3$Fbin, type = 's')
plot(n3$zn, n3$Fbin, type = 's')
points(n15$zn, n15$Fbin, type = 's')
points(n30$zn, n30$Fbin, type = 's')
plot(n3$zn, n3$Fbin, type = 's')
points(n15$zn, n15$Fbin, type = 's')
points(n30$zn, n30$Fbin, type = 's')
curve(pnorm, from = -2, to = 1.5)
plot(n3$zn, n3$Fbin, type = 's')
points(n15$zn, n15$Fbin, type = 's')
points(n30$zn, n30$Fbin, type = 's')
curve(pnorm, from = -2, to = 1.5)
plot(n3$zn, n3$Fbin, type = 's')
points(n15$zn, n15$Fbin, type = 's')
points(n30$zn, n30$Fbin, type = 's')
points(curve(pnorm, from = -2, to = 1.5))
lines(pnorm, from = -2, to = 1.5)
lines(x, type = 's')
x_n <- seq(from = -3, to = 3)
pnorm(x_n, 0, 1)
x_n1 <- pnorm(x_n, 0, 1)
lines(x_n1, type = 's')
lines(x_n1, y = NULL, type = 's')
lines(x_n, x_n1, type = 's')
plot(n3$zn, n3$Fbin, type = 's')
x_n <- seq(-2:2)
x_n
x_n <- seq(-200:200)/50
x_n
points(x_n, pnorm(x_n, 0, 1), type = 's')
plot(n3$zn, n3$Fbin, type = 's')
points(n15$zn, n15$Fbin, type = 's')
points(n30$zn, n30$Fbin, type = 's')
points(x_n, pnorm(x_n, 0, 1), type = 's')
x_n <- seq(-200:200)
x_n
x_n <- seq(-2, 2, 0.001)
x_n
plot(n3$zn, n3$Fbin, type = 's')
points(n15$zn, n15$Fbin, type = 's')
points(n30$zn, n30$Fbin, type = 's')
points(x_n, pnorm(x_n, 0, 1), type = 's')
# load packages here
library(tidyverse)
# read in data
df <- read_csv('state_of_utah.csv')
head(df)
df['81-90'] <- df %>%
mutate(sum = rowSums(across(c(`1981`, `1982`, `1983`, `1984`, `1985`, `1986`, `1987`, `1988`, `1989`, `1990`))))
df %>%
mutate(sum = rowSums(across(c(`1981`, `1982`, `1983`, `1984`, `1985`, `1986`, `1987`, `1988`, `1989`, `1990`))))
df[,'81-90'] <- df[,54]
df[,54]
df[54]
df[, 54]
df[, 12]
df
df[,'81-90'] <- df %>%
mutate(sum = rowSums(across(c(`1981`, `1982`, `1983`, `1984`, `1985`, `1986`, `1987`, `1988`, `1989`, `1990`))))
df1 <- df %>%
mutate(sum = rowSums(across(c(`1981`, `1982`, `1983`, `1984`, `1985`, `1986`, `1987`, `1988`, `1989`, `1990`))))
df[,'81-90'] <- df1[, 54]
df
df2 <- df %>%
mutate(sum = rowSums(across(c(`1991`, `1992`, `1993`, `1994`, `1995`, `1996`, `1997`, `1998`, `1999`, `2000`))))
df[, '91-2000'] <- df2[, 54]
df
# load packages here
library(tidyverse)
# read in data
df <- read_csv('state_of_utah.csv')
# head(df)
df1 <- df %>%
mutate(sum = rowSums(across(c(`1981`, `1982`, `1983`, `1984`, `1985`, `1986`, `1987`, `1988`, `1989`, `1990`))))
df[,'81-90'] <- df1[, 54]
df2 <- df %>%
mutate(sum = rowSums(across(c(`1991`, `1992`, `1993`, `1994`, `1995`, `1996`, `1997`, `1998`, `1999`, `2000`))))
df[, '91-2000'] <- df2[, 54]
df3 <- df %>%
mutate(sum = rowSums(across(c(`2001`, `2002`, `2003`, `2004`, `2005`, `2006`, `2007`, `2008`, `2009`, `2010`))))
df[, '01-2010'] <- df3[, 54]
df4 <- df %>%
mutate(sum = rowSums(across(c(`2011`, `2012`, `2013`, `2014`, `2015`, `2016`, `2017`, `2018`, `2019`, `2020`))))
df[, '11-2020'] <- df2[, 54]
head(df)
# 1a
#define range
p = seq(0, 1, length=100)
#create plot of Beta distribution with shape parameters
plot(p, dbeta(p, 6, 4), type='l')
# 1d
qbeta(.025, 83, 27)
qbeta(.975, 83, 27)
#create plot of Beta distribution with shape parameters
plot1 <- plot(p, dbeta(p, 6, 4), type='l')
#create plot of Beta distribution with shape parameters
plot1 <- plot(p, dbeta(p, 6, 4), type='l')
# 1e
plot1
# 1e
plot(p, dbeta(p, 83, 27), type='l')
# 1e
plot(p, dbeta(p, 83, 27), type='l')
plot(p, dbeta(p, 83, 27), type='l')
abline(v = .7545)
abline(v = 0.670348, col="red", lwd=3, lty=2)
abline(v = 0.82998, col="red", lwd=3, lty=2)
# 2a
plot(p, dnorm(p, 15, sqrt(2.5)), type = 'l')
# 2a
p2 = seq(10, 20, length = 100)
plot(p2, dnorm(p, 15, sqrt(2.5)), type = 'l')
p2
plot(p2, dnorm(p, 15, sqrt(2.5)), type = 'l')
plot(p2, dnorm(p2, 15, sqrt(2.5)), type = 'l')
# 2d
qnorm(.025, 14.9358, 0.9682)
qnorm(.975, 14.9358, 0.9682)
plot(p2, dnorm(p2, 14.9358, 0.9682), type='l')
abline(v = .14.9358)
abline(v = 13.03816, col="red", lwd=3, lty=2)
abline(v = 16.83344, col="red", lwd=3, lty=2)
abline(v = .14.9358)
plot(p2, dnorm(p2, 14.9358, 0.9682), type='l')
abline(v = 14.9358)
abline(v = 13.03816, col="red", lwd=3, lty=2)
abline(v = 16.83344, col="red", lwd=3, lty=2)
# Question 1
t.test(x, conf.level = 0.88)
# Question 1
t.test(1584, conf.level = 0.99)
# Question 1
qt(.99, 19)
# Question 1
qt(.995, 19)
# Question 2
c(25.2,21.3,22.8,17,29.8,21,25.5,16,20.9,19.5)
# Question 2
sample1 <- c(25.2,21.3,22.8,17,29.8,21,25.5,16,20.9,19.5)
mean(sample1)
sd(sample1)
qt(.975, 9)
# Question 3
sample2 <- c(.53, .65, .46, .50, .37)
# L: Residuals vs. Fitted Values Plot
sample2_residvfit <- autoplot(sample2, which = 1, ncol = 1, nrow = 1) +
theme(aspect.ratio = 1)
library(tidyverse)
library(ggfortify)
# Check Normality Assumption
# Normal Probability Plot
#   "qq plot"
sample2_qq <- autoplot(sample2, which = 2, ncol = 1, nrow = 1) +
theme(aspect.ratio = 1)
sample2_qq
qqnorm(sample2)
qqnorm(sample2)
qqline(sample2)
qqline(sample2)
qqnorm(sample2)
qqnorm(sample2)
qqnorm(sample2)
qqline(sample2)
# Question 4
sample2 <- c(.53, .65, .46, .50, .37)
mean(sample2)
sd(sample2)
qqnorm(sample2)
qqline(sample2)
mean(sample2)
sd(sample2)
qt(.975, 4)
pt(-2.1416, 4, .6)
pt(-2.1416, 4)
find_joint_p1 <- function(x, y){
solution1 <- ((y)^(x)) / (fact(x) * (1 + y + ((y^2)/2) + ((y^3)/6) + ((y^4)/24)))
}
find_joint_p1(1, 0.5)
find_joint_p1 <- function(x, y){
solution1 <- ((y)^(x)) / (factorial(x) * (1 + y + ((y^2)/2) + ((y^3)/6) + ((y^4)/24)))
}
find_joint_p1(1, 0.5)
print(find_joint_p1(1, 0.5))
x1 <- find_joint_p1(1, 0.5)
x1/10
x1 <- find_joint_p1(2, 0.5)
x1/10
x1 <- find_joint_p1(3, 0.5)
x1/10
x1 <- find_joint_p1(4, 0.5)
x1/10
x1 <- find_joint_p1(0, 1)
x1*(2/10)
x1 <- find_joint_p1(1, 1)
x1*(2/10)
x1 <- find_joint_p1(2, 1)
x1*(2/10)
x1 <- find_joint_p1(3, 1)
x1*(2/10)
x1 <- find_joint_p1(4, 1)
x1*(2/10)
x1 <- find_joint_p1(0, 2)
x1*(7/10)
x1 <- find_joint_p1(1, 2)
x1*(7/10)
x1 <- find_joint_p1(2, 2)
x1*(7/10)
x1 <- find_joint_p1(3, 2)
x1*(7/10)
x1 <- find_joint_p1(4, 2)
x1*(7/10)
find_joint_p1 <- function(x, y){
solution1 <- ((y)^(x)) / (factorial(x) * (1 + y + ((y^2)/2) + ((y^3)/6) + ((y^4)/24)))
}
x1 <- find_joint_p1(1, 0.5)
x1
x1 <- find_joint_p1(2, 0.5)
x1
x1 <- find_joint_p1(3, 0.5)
x1
x1 <- find_joint_p1(4, 0.5)
x1
x1*4
x1 <- find_joint_p1(3, 0.5)
x1
x1 <- find_joint_p1(2, 0.5)
x1
x1*2
x1 <- find_joint_p1(3, 0.5)
x1
x1*3
0.03791469 + 0.1516588 + 0.006319115 + 0.3033175
find_joint_p1 <- function(x, y){
solution1 <- ((y)^(x)) / (factorial(x) * (1 + y + ((y^2)/2) + ((y^3)/6) + ((y^4)/24)))
}
setwd("~/byu_fall_2023/Stat_348/STAT348/KaggleBikeShare")
